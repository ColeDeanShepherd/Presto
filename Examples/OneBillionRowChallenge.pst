main = fn (console: Console, fileSystem: FileSystem) -> {
    file_name = "asdf.txt"

    file_contents = read_text_file(fileSystem, file_name)?
    lines = get_lines(file_contents)
    split_lines = map(lines, fn (line: text) -> split_by(line, ";"))
    parsed_split_lines = map(
        split_lines,
        fn (x: seq[text]) -> (list_1st(x), (list_2nd >> parse_real >> unwrap)(x))
    )
    grouped_split_lines = group_by(parsed_split_lines, _1st)
    weather_station_and_stats = map(
        grouped_split_lines,
        fn (g: Grouping[(text, real), text]) -> (key(g), round(min(values(g)), 1), round(mean(values(g)), 1), round(max(value(g)), 1))
    )
    sorted_weather_station_and_stats = sort_by(weather_station_and_stats, _1st)

    print_weather_stations(console, sorted_weather_station_and_stats)
}

#run2 =
#    read_text_file(fileSystem, _) >>
#    get_lines >>
#    map(split_by(_, ";"), _) >>
#    map(fn (x: _) -> (_1st(x), (_2nd >> parse_real >> unwrap)(x)), _) >>
#    group_by(_1st, _) >>
#    map(fn (g: _) -> (key(g), round(min(values(g)), 1), round(mean(values(g)), 1), round(max(value(g)), 1)), _) >>
#    sort_by(_1st, _) >>
#    print_weather_stations
#
#run4 = fn (console: Console, fileSystem: FileSystem, file_name: text) -> {
#    read_text_file(fileSystem, file_name)
#    .get_lines()
#    .map(split_by(_, ";"), _)
#    .map(fn (x: _) -> (_1st(x), (_2nd >> parse_real >> unwrap)(x)), _)
#    .group_by(_1st, _)
#    .map(fn (g: _) -> (key(g), round(min(values(g)), 1), round(mean(values(g)), 1), round(max(value(g)), 1)), _)
#    .sort_by(_1st, _)
#    .print_weather_stations()
#}

print_weather_stations = fn (console: Console, x: seq[(text, real, real, real)]) -> {
    p2 = fn (x: (text, real, real, real)) -> print_weather_station(console, x)

    print(console, "{")?
    map(x, p2 >> unwrap)
    print(console, "}")
}

print_weather_station = fn (console: Console, x: (text, real, real, real)) -> {
    print(console, t4_1st(x))?
    print(console, "=")?
    print(console, (t4_2nd >> to_string)(x))?
    print(console, "/")?
    print(console, (t4_3rd >> to_string)(x))?
    print(console, "/")?
    print(console, (t4_4th >> to_string)(x))?
    print(console, ", ")
}